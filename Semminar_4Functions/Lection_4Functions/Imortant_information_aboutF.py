# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
# –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Å–≤–æ–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
# –ù–∞–ø—Ä–∏–º–µ—Ä:
#
#
# def quadratic_equations(a, b=0, c=0):
#     d = b ** 2 - 4 * a * c
#     if d > 0:
#         return (-b + d ** 0.5) / (2 * a), (-b - d ** 0.5) / (2 * a)
#     if d == 0:
#         return -b / (2 * a)
#
# print(quadratic_equations(2, -9))
#
#
# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è a –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—Ç—å 2-–π
# –∏/–∏–ª–∏ 3-–π –∞—Ä–≥—É–º–µ–Ω—Ç, –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ø–∞–¥—É—Ç –Ω—É–ª–∏ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
# üî• PEP-8! –î–ª—è —É–∫–∞–∑–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞–∫
# —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞. –î–æ –∏ –ø–æ—Å–ª–µ —Ç–∞–∫–æ–≥–æ —Ä–∞–≤–Ω–æ –ø—Ä–æ–±–µ–ª—ã –Ω–µ —Å—Ç–∞–≤—è—Ç—Å—è.
# –ò–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ
# –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
# –í –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ–ª—å–∑—è —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω—è–µ–º—ã —Ç–∏–ø—ã: —Å–ø–∏—Å–∫–∏,
# —Å–ª–æ–≤–∞—Ä–∏ –∏ —Ç.–ø. –≠—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º:
#
# def from_one_to_n(n, data=[]):
#     for i in range(1, n + 1):
#         data.append(i)
#     return data
#
# new_list = from_one_to_n(5)
# print(f'{new_list = }')
# other_list = from_one_to_n(7)
# print(f'{other_list = }')
#
# other_list —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –∏ –Ω–æ–≤—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –≤ —Å–ø–∏—Å–∫–µ
# new_list. –°–≤—è–∑–∞–Ω–æ —ç—Ç–æ —Å —Ç–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏
# —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏. –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ ‚Äî —Ä–∞–±–æ—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º data –∏ –µ–≥–æ –æ—á–µ—Ä–µ–¥–Ω–æ–µ
# –∏–∑–º–µ–Ω–µ–Ω–∏–µ.
# –ï—Å–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω—É–∂–µ–Ω –∏–∑–º–µ–Ω—è–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö,
# –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ—Å–æ–±—ã–π –ø—Ä–∏—ë–º —Å None
#
# def from_one_to_n(n, data=None):
#     if data is None:
#         data = []
#     for i in range(1, n + 1):
#         data.append(i)
#     return data
#
# –ï—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –æ–Ω —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–æ –Ω–æ–≤–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤—ã–∑–æ–≤–∞
# —Ñ—É–Ω–∫—Ü–∏–∏.
#
# –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
# –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Ñ—É–Ω–∫—Ü–∏–∏. –ù–∞—á–Ω—ë–º
# —Å –æ–±—â–µ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞.
#
# def func(positional_only_parameters, /, positional_or_keyword_parameters, *,
# keyword_only_parameters):
#     pass
#
# –ü—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω–∞—á–∞–ª–µ –∏–¥—É—Ç –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü—Ä–∏
# –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∏–º–µ–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π-–∞—Ä–≥—É–º–µ–Ω—Ç–∞.
# –ö–æ—Å–∞—è —á–µ—Ä—Ç–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –≠—Ç–æ —Å–∏–º–≤–æ–ª —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å. –ü–æ—Å–ª–µ –Ω–µ—ë –º–æ–≥—É—Ç
# –∏–¥—Ç–∏ –∫–∞–∫ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ, —Ç–∞–∫ –∏ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –î–∞–ª–µ–µ —Å–∏–º–≤–æ–ª —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
# –∑–≤—ë–∑–¥–æ—á–∫–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
# üî• –í–∞–∂–Ω–æ! –ö–æ—Å–∞—è —á–µ—Ä—Ç–∞ –∏ –∑–≤—ë–∑–¥–æ—á–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏–ª–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
# –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
# –†–∞–∑–±–µ—Ä–µ–º –ø–µ—Ä–µ–¥–∞—á—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –∏ –ø–æ –∏–º–µ–Ω–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö.
# ‚óè –ü—Ä–∏–º–µ—Ä –æ–±—ã—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:
#
# def standard_arg(arg):
#     print(arg) # –ü—Ä–∏–Ω—Ç–∏–º –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –∞ –Ω–µ –¥–ª—è –ø—Ä–∏–≤—ã—á–∫–∏
#
# standard_arg(42)
# standard_arg(arg=42)
#
# –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –∏ –ø–æ –∫–ª—é—á—É. –ú—ã —è–≤–Ω–æ —É–∫–∞–∑–∞–ª–∏ –∏–º—è
# –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
# ‚óè –ü—Ä–∏–º–µ—Ä —Ç–æ–ª—å–∫–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:
#
# def pos_only_arg(arg, /):
#     print(arg) # –ü—Ä–∏–Ω—Ç–∏–º –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –∞ –Ω–µ –¥–ª—è –ø—Ä–∏–≤—ã—á–∫–∏
#
# pos_only_arg(42)
# pos_only_arg(arg=42) # TypeError: pos_only_arg() got some
#
# positional-only arguments passed as keyword arguments: 'arg'
# –¢–µ–ø–µ—Ä—å —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
# ‚óè –ü—Ä–∏–º–µ—Ä —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:
#
# def kwd_only_arg(*, arg):
#     print(arg) # –ü—Ä–∏–Ω—Ç–∏–º –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –∞ –Ω–µ –¥–ª—è –ø—Ä–∏–≤—ã—á–∫–∏
#
# kwd_only_arg(42)
# kwd_only_arg(arg=42)
#
# –ê —Ç–µ–ø–µ—Ä—å –Ω–∞–æ–±–æ—Ä–æ—Ç, –º–æ–∂–µ–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É.
# ‚óè –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ –≤—Å–µ–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
# def combined_example(pos_only, /, standard, *, kwd_only):
#     print(pos_only, standard, kwd_only) # –ü—Ä–∏–Ω—Ç–∏–º –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞, –∞–Ω–µ –¥–ª—è –ø—Ä–∏–≤—ã—á–∫–∏
#
# combined_example(1, 2, 3) # TypeError: combined_example() takes 2 positional arguments but 3 were given
# combined_example(1, 2, kwd_only=3)
# combined_example(1, standard=2, kwd_only=3)
# combined_example(pos_only=1, standard=2, kwd_only=3) # TypeError: combined_example() got some positional-only arguments passed as keyword arguments: 'pos_only'
# –ò –Ω–∞–∫–æ–Ω–µ—Ü –ø—Ä–∏–º–µ—Ä —Å–æ –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
# üî• –í–∞–∂–Ω–æ! –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
# –ø–æ—Ä—è–¥–æ–∫ –ø–µ—Ä–µ–¥–∞—á–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è.
#
# def triangulation(*, x, y, z):
#     pass
# triangulation(y=5, z=2, x=11)
