# Dict comprehensions
# Ещё один вариант синтаксического сахара — генерация словаря.
# my_dictcomp = {i: chr(i) for i in range(97, 123)}
# print(my_dictcomp) # {97: 'a', 98: 'b', 99: 'c',... }
# for number, char in my_dictcomp.items():
#     print(f'dict[{number}] = {char}')
# Запись похожа на создание множества, но в качестве выражения для добавления
# указываются две переменные через двоеточие: key: value. Благодаря такой записи
# Python понимает, что надо создать словарь.
# 🔥 Важно! Стоит помнить, что ключи словаря должны быть объектами
# неизменяемого типа.
#
# Во всём остальном для генерации словарей в одну строку действуют те же правила,
# что и для других типов данных.
# Задание
# Перед вами несколько строк кода. Напишите что по вашему мнению выведет print,
# не запуская код. У вас 3 минуты.
# data = {2, 4, 4, 6, 8, 10, 12}
# res1 = {None: item for item in data if item > 4}
# res2 = (item for item in data if item > 4)
# res3 = [[item] for item in data if item > 4]
# print(res1, res2, res3)
