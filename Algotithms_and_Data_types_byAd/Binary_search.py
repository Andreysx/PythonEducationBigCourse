# Алгоритмом называется набор инструкций для выполнения некоторой задачи
# Логарифм - оперция обратная возведению в степень
# Log10 100 = 2 Log2 8 = 3

# Log2 100 = 7шагов

# Бинарный поиск - это алгоритм.
# Принимает отсортированный список(массив) и искомый элемент
# Бинарный поиск работает только если МАССИВ(СПИСОК) отсортирован.
# Бинарный поиск возвращает позицию искомого элемента в массиве.
# Алгоритм каждый раз уменьшает зону поиска вдвое
# Время выполнения алгоритма поиска = O(Log n) логарифмическое время(Сложность по АСИМТОТИЧЕСКОЙ НОТАЦИИ О-БОЛЬШОЕ) n -количество операций
#Алгоритм простого поиска(перебора) - линейное время O(n)

def binary_search(array: list, item):
    low = 0  # индекс первого элемента
    high = len(array) - 1  # индекс последнего элемента
    while low <= high: # пока эта часть не сократится до 1 элемента
        mid = (low + high) // 2 # нахождение индекса среднего элемента
        guess = array[mid]
        if guess == item: # значение найдено
            return mid # возвращаем позицию элемента(индекс)
        if guess > item: #Много
            high = mid - 1
        else:           #Мало
            low = mid + 1
    return None # Значения не существует

my_list = [1, 3, 5, 7 ,9]

print(binary_search(my_list, 3))
print(binary_search(my_list, 5))
print(binary_search(my_list, -1))

