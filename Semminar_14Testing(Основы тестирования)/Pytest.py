# 3. –û—Å–Ω–æ–≤—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å pytest
# –§–∏–Ω–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ ‚Äî pytest. –û–Ω –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é
# –±–∏–±–ª–∏–æ—Ç–µ–∫—É Python, –ø–æ—ç—Ç–æ–º—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º.
# pip install pytest
# üî• –í–∞–∂–Ω–æ! –í–µ—Ä—Å–∏—è Python –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 3.7 –∏–ª–∏ –≤—ã—à–µ.
# –ö–æ–º–∞–Ω–¥–∞ assert
# –í Python –µ—Å—Ç—å –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ assert. –ü–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã —Å unittest –≤—ã
# –¥–æ–≥–∞–¥—ã–≤–∞–µ—Ç–µ—Å—å –æ –µ—ë –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏. assert –¥–µ–ª–∞–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ. –ï—Å–ª–∏ –æ–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
# –∏—Å—Ç–∏–Ω—É, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –ê –µ—Å–ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–æ–∂–Ω–æ, –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è
# –æ—à–∏–±–∫–∞ AssertionError.
# –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å assert –∫–∞–∫ –æ—Å–æ–±—É—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é if.
# ‚óè ‚Äú–∞—Å–µ—Ä—Ç‚Äù
# assert —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, "–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–æ—Å—å"
# ‚óè ‚Äú–∏—Ñ‚Äù
#
# if —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ:
#     pass
# else:
#     raise AssertionError("–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–æ—Å—å")
# –ú–æ–¥—É–ª—å pytest —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –≤–æ–∫—Ä—É–≥ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã assert. –ù–æ –≤
# –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –ø—Ä–∏–º–µ—Ä–∞ —Å if –¥–∞—ë—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö, –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã –Ω–µ
# –ø—Ä–æ—Ö–æ–¥—è—Ç.
#
#
# –û–±—â–∏–µ –º–æ–º–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç—ã —Å pytest
# –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç
# –¥–≤–∞ —á–∏—Å–ª–∞.
# import pytest
#
# def sum_two_num(a, b):
#     return a + b
# # return f'{a}{b}'
# def test_sum():
#     assert sum_two_num(2, 3) == 5, '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø–æ–∫–∏–Ω—É–ª–∞ —á–∞—Ç'
#
# if __name__ == '__main__':
#     pytest.main()
# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
# –ø—Ä–æ—Å—Ç–µ–π—à–∏—Ö —Ç–µ—Å—Ç–æ–≤ –º–æ–¥—É–ª—å pytest –Ω–µ –Ω—É–∂–µ–Ω.
# –§—É–Ω–∫—Ü–∏—è sum_two_num –Ω–∞—à –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–π. –û–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä—É —á–∏—Å–ª–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
# –∏—Ö —Å—É–º–º—É.
# –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ–π—Å–∞ –ø—Ä–æ—Å—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–æ —Å–ª–æ–≤–∞ test.
# –í–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º assert –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –í –ø—Ä–æ—Å—Ç–µ–π—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ
# —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∞—Å—Å–µ—Ä—Ç—ã
# —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –¥–∞–ª–µ–µ. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç
# –≤—ã–≤–µ–¥–µ–Ω–æ –≤ —Å–ª—É—á–∞–µ –ø—Ä–æ–≤–∞–ª–∞ —Ç–µ—Å—Ç–∞.
# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –≤ —Ñ–∞–π–ª–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º. pytest –Ω–∞–π–¥—ë—Ç –∏ –∑–∞–ø—É—Å—Ç–∏—Ç –∏—Ö –≤—Å–µ –Ω–∞
# –æ—Å–Ω–æ–≤–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–º—ë–Ω. –ü—Ä–∏ —ç—Ç–æ–º –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ –∫–∞–∫ –≤
# unittest –Ω–µ –Ω—É–∂–Ω–æ. –ê –µ—Å–ª–∏ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∫–µ–π—Å—ã –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞, —Å–æ–∑–¥–∞–π—Ç–µ
# –∫–ª–∞—Å—Å –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å Test.
# –ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main –∏–∑ –º–æ–¥—É–ª—è pytest.
# üî• –í–Ω–∏–º–∞–Ω–∏–µ! –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤—ã–≥–ª—è–¥–∏—Ç
# –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∑–∞–ø—É—Å–∫—É doctest –∏ unittest. –ö–ª—é—á —Å –æ–¥–∏–Ω–æ—á–Ω—ã–º –∏–ª–∏ –¥–≤–æ–π–Ω—ã–º v
# —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏. –ö—Ä–æ–º–µ —Ç–æ–≥–æ –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å pytest
# –Ω–∞–ø—Ä—è–º—É—é.
# $ python3 -m pytest tests.py -vv
# $ pytest tests_pt.py
# 23
# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ pytest —Å doctest –∏ unittest
# –ï—â—ë —Ä–∞–∑ –≤–æ–∑—å–º—ë–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Å–ª–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É –∏ —Ä–µ–∞–ª–∏–∑—É–µ–º –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ
# —Ä–∞–Ω–µ–µ —Ç–µ—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—è pytest.
# –§–∞–π–ª prime.py –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è
#
# def is_prime(p: int) -> bool:
#     if not isinstance(p, int):
#         raise TypeError('The number P must be an integer type')
#     elif p < 2:
#         raise ValueError('The number P must be greater than one')
#     elif p > 100_000_000:
#         print('If the number P is prime, the check may take a long time. Working...')
#     for i in range(2, p):
#         if p % i == 0:
#             return False
#         return True
#
# –§–∞–π–ª test_prime_pt.py —Å –∫–µ–π—Å–∞–º–∏ pytest
#
# import pytest
# from prime import is_prime
#
#
# def test_is_prime():
#     assert not is_prime(42), '42 - —Å–æ—Å—Ç–∞–≤–Ω–æ–µ —á–∏—Å–ª–æ'
#     assert is_prime(73), '73 - –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ'
# def test_type():
#     with pytest.raises(TypeError):
#         is_prime(3.14)
# def test_value():
#     with pytest.raises(ValueError):
#         is_prime(-100)
# def test_value_with_text():
#     with pytest.raises(ValueError, match=r'The number P must be greater than 1'):
#         is_prime(1)
# def test_warning_false(capfd):
#     is_prime(100_000_001)
#     captured = capfd.readouterr()
#     assert captured.out == 'If the number P is prime, the check may take a long time. Working...\n'
# def test_warning_true(capfd):
#     is_prime(100_000_007)
#     captured = capfd.readouterr()
#     assert captured.out == 'If the number P is prime, the check may take a long time. Working...\n'
#
# if __name__ == '__main__':
# pytest.main(['-v'])
#
# –ù–∞—á–∞–ª–æ —Å –∏–º–ø–æ—Ä—Ç–æ–º –∏ –∫–æ–Ω–µ—Ü —Å –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–æ–≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–ª—è Python. –†–∞–∑–±–µ—Ä—ë–º
# –∫–∞–∂–¥—ã–π –∏–∑ –∫–µ–π—Å–æ–≤.
#
# ‚û¢ –ö–µ–π—Å test_is_prime
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Ä–∞–±–æ—Ç—É —Ñ—É–Ω–∫—Ü–∏–∏. –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ assert not –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å
# –ª–æ–∂—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏. –í—Ç–æ—Ä–æ–π assert –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å
# –∏—Å—Ç–∏–Ω—É.
# üî• –í–∞–∂–Ω–æ! –ï—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–≤–∞–ª–∏—Ç —Ç–µ—Å—Ç, –≤—Ç–æ—Ä–æ–π assert –Ω–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω
# –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏. –û–±—ã—á–Ω–æ –≤–Ω—É—Ç—Ä–∏ –∫–µ–π—Å–∞ –ø–∏—à—É—Ç –æ–¥–Ω–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ
# –º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –¥–≤–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–µ–π—Å–∞.
# ‚û¢ –ö–µ–π—Å test_type
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ pytest.raises –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –æ—à–∏–±–∫—É
# TypeError –ø—Ä–∏ –≤—ã–∑–æ–≤–µ is_prime —Å –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
# –ù–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç–µ—Å—Ç, –∞ –µ—ë –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ - —Ä–æ–Ω—è–µ—Ç. –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞
# –ø–æ–¥–Ω—è—Ç—å –æ—à–∏–±–∫—É - –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –î–∞–ª—å–Ω–µ–π—à–∏–π –∫–æ–¥
# –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è.
# ‚û¢ –ö–µ–π—Å test_value
# –¢–µ—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–∞, –Ω–æ –º—ã —É–∫–∞–∑–∞–ª–∏ –¥—Ä—É–≥—É—é –æ—à–∏–±–∫—É –≤
# –º–µ–Ω–µ–¥–∂–µ—Ä–µ –∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é.
# ‚û¢ –ö–µ–π—Å test_value_with_text
# –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é. –ü–æ–º–∏–º–æ –æ—à–∏–±–∫–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä match
# –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ. –ï—Å–ª–∏ –æ–Ω–æ —Å–æ–≤–ø–∞–¥—ë—Ç —Å —Ç–µ–∫—Å—Ç–æ–º –æ—à–∏–±–∫–∏, —Ç–µ—Å—Ç –±—É–¥–µ—Ç
# –ø—Ä–æ–π–¥–µ–Ω.
# ‚û¢ –ö–µ–π—Å—ã test_warning_false –∏ test_warning_true
# –í–Ω–∏–º–∞–Ω–∏–µ! –û–±–∞ –ø—Ä–∏–º–µ—Ä–∞ –≤—ã—Ö–æ–¥—è—Ç –∑–∞ —Ä–∞–º–∫–∏ –æ—Å–Ω–æ–≤ pytest. –≠—Ç–æ —Å–∫–æ—Ä–µ–µ –ø—Ä–∏–º–µ—Ä –Ω–∞
# –±—É–¥—É—â–µ–µ –¥–ª—è —Å–∞–º—ã—Ö –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã—Ö.
# –ö–µ–π—Å –ø–æ–ª—É—á–∞–µ—Ç —Ñ–∏–∫—Å—Ç—É—Ä—É capfd –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞. capfd (capture file descriptors)
# —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ–π –∏–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –≤ pytest —Ñ–∏–∫—Å—Ç—É—Ä, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å
# –ø–æ—Ç–æ–∫–∏ –≤—ã–≤–æ–¥–∞ –∏ –æ—à–∏–±–æ–∫. –í–Ω—É—Ç—Ä–∏ –∫–µ–π—Å–∞ –≤—ã–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é. –î–∞–ª–µ–µ
# –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ readouterr() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é captured. –í
# —Ñ–∏–Ω–∞–ª–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç captured.out (–ø–æ—Ç–æ–∫–∞ –≤—ã–≤–æ–¥–∞) —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ç–µ–∫—Å—Ç–æ–º
# —Å–æ–æ–±—â–µ–Ω–∏—è.
# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ doctest –∏ unittest
# –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –¥—Ä—É–≥–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
# —Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –û–°:
# $ pytest --doctest-modules prime.py -v
# $ pytest tests_ut.py
# –í —Å–ª—É—á–∞–µ —Å doctest –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ñ–ª–∞–≥ --doctest-modules. –î–ª—è unittest –Ω–∏—á–µ–≥–æ
# —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ –Ω–∞–¥–æ. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å–µ –∫–µ–π—Å –∏–∑ unittest –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤ pytest.
# –ú–æ–¥—É–ª—å –ø–æ–Ω–∏–º–∞–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —Å–ø–æ—Å–æ–±–µ–Ω —Å–æ–±—Ä–∞—Ç—å —Ç–µ—Å—Ç—ã –∏–∑ –∫–ª–∞—Å—Å–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Ö.
#
#
#
#
# –§–∏–∫—Å—Ç—É—Ä—ã pytest –∫–∞–∫ –∑–∞–º–µ–Ω—ã unittest setUp –∏
# tearDown
# –ï—Å–ª–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö
# —Ç–µ—Å—Ç–æ–≤, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∏–∫—Å—Ç—É—Ä—ã. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏–∑
# –≥–ª–∞–≤—ã –æ unittest.
# import pytest
#
# @pytest.fixture
# def data():
#     return [2, 3, 5, 7]
#
# def test_append(data):
#     data.append(11)
#     assert data == [2, 3, 5, 7, 11]
#
# def test_remove(data):
#     data.remove(5)
#     assert data == [2, 3, 7]
#
# def test_pop(data):
#     data.pop()
#     assert data == [2, 3, 5]
#
#
# if __name__ == '__main__':
# pytest.main(['-v'])
# –§—É–Ω–∫—Ü–∏—è data –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Ñ–∏–∫—Å—Ç—É—Ä—É –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ @pytest.fixture.
# –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–∫—Å—Ç—É—Ä—É –≤–Ω—É—Ç—Ä–∏ –∫–µ–π—Å–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å –µ—ë –≤ –∫–∞—á–µ—Å—Ç–≤–µ
# –∞—Ä–≥—É–º–µ–Ω—Ç–∞. –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ pythest –ø–æ–¥—Ö–æ–¥ –∫ —Ñ–∏–∫—Å—Ç—É—Ä–∞–º —É–¥–æ–±–µ–Ω —Ç–µ–º, —á—Ç–æ
# –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª—é–±—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ —Å –∫–µ–π—Å–∞–º–∏.
# ‚óè –º–æ–∂–Ω–æ –∏–º–µ—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–∏–∫—Å—Ç—É—Ä –∏ —Ä–∞–∑–Ω—ã–µ –∫–µ–π—Å—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ
# —Ñ–∏–∫—Å—Ç—É—Ä—ã.
# ‚óè –≤ –∫–µ–π—Å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–∫—Å—Ç—É—Ä.
# ‚óè —Ñ–∏–∫—Å—Ç—É—Ä–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –¥—Ä—É–≥—É—é —Ñ–∏–∫—Å—Ç—É—Ä—É.
#
#
# –ï—â—ë –Ω–µ–º–Ω–æ–≥–æ –æ —Ñ–∏–∫—Å—Ç—É—Ä–∞—Ö
# –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä –ø–æ—Å–ª–æ–∂–Ω–µ–µ.
# import pytest
#
# @pytest.fixture
# def get_file(tmp_path):
#     f_name = tmp_path / 'test_file.txt'
#     print(f'–°–æ–∑–¥–∞—é —Ñ–∞–π–ª {f_name}') # –ø—Ä–∏–Ω—Ç–∏–º –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö
#     with open(f_name, 'w+', encoding='utf-8') as f:
#         yield f
#     print(f'–ó–∞–∫—Ä—ã–≤–∞—é —Ñ–∞–π–ª {f_name}') # –ø—Ä–∏–Ω—Ç–∏–º –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö
#
# @pytest.fixture
# def set_num(get_file):
#     print(f'–ó–∞–ø–æ–ª–Ω—è—é —Ñ–∞–π–ª {get_file.name} —Ü–∏—Ñ—Ä–∞–º–∏') # –ø—Ä–∏–Ω—Ç–∏–º –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö
#     for i in range(10):
#         get_file.write(f'{i:05}')
#     get_file.seek(0)
#
# @pytest.fixture
# def set_char(get_file):
#     print(f'–ó–∞–ø–æ–ª–Ω—è—é —Ñ–∞–π–ª {get_file.name} –±—É–∫–≤–∞–º–∏') # –ø—Ä–∏–Ω—Ç–∏–º –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö
#     for i in range(65, 91):
#         get_file.write(f'{chr(i)}')
#     get_file.seek(0)
#     return get_file
#
# def test_first_num(get_file, set_num):
#     first = get_file.read(5)
#     assert first == '00000'
#
# def test_first_char(set_char):
#     first = set_char.read(5)
#     assert first == 'ABCD' # —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–æ–≤–∞–ª–∏–º —Ç–µ—Å—Ç
#
# if __name__ == '__main__':
#      pytest.main(['-v'])
#
# –ö–µ–π—Å–æ–≤ –≤—Å–µ–≥–æ –¥–≤–∞: test_first_num –∏ test_first_chr. –ò –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–≤–æ–∏
# —Ñ–∏–∫—Å—Ç—É—Ä—ã. –ù–æ –¥–∞–≤–∞–π—Ç–µ –æ–±–æ –≤—Å—ë–º —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑.
# ‚û¢ –§–∏–∫—Å—Ç—É—Ä–∞ get_file
# –§–∏–∫—Å—Ç—É—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∞—Ä–≥—É–º–µ–Ω—Ç tmp_path. –≠—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è
# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å - –æ–±—ä–µ–∫—Ç pathlib.Path. –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤—ã–≤–æ–¥–∏–º –Ω–µ
# –ø–µ—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∏ –æ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–∏. –û—Ç—Å–ª–µ–¥–∏–º –∫–æ–≥–¥–∞
# —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∏–∫—Å—Ç—É—Ä–∞.
# –í–Ω—É—Ç—Ä–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª –∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É yield –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
# —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–µ–≥–æ. –ï—Å–ª–∏ –±—ã –º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É return, –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
# –≤—ã–∑–≤–∞–ª –±—ã f.close() –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ —É–∫–∞–∑–∞–Ω–∏—è –∏ —Ñ–∞–π–ª —Å—Ç–∞–ª –±—ã –Ω–µ—á–∏—Ç–∞–µ–º—ã–º.
# –ò—Å–ø–æ–ª—å–∑—É—è yield –º—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä. –¢–µ–ø–µ—Ä—å –≤–Ω—É—Ç—Ä–∏ —Ñ–∏–∫—Å—Ç—É—Ä—ã –µ—Å—Ç—å
# ‚Äú—Å–µ—Ç–∞–ø‚Äù —Å–æ–∑–¥–∞—é—â–∏–π —Ñ–∞–π–ª –∏ ‚Äú—Ç–∏—Ä–¥–∞—É–Ω‚Äù, –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π –µ–≥–æ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
# –í–Ω–∏–º–∞–Ω–∏–µ! –ú—ã —è–≤–Ω–æ –Ω–µ —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã. –§–∏–∫—Å—Ç—É—Ä–∞ tmp_path —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç
# —Ç—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–∞, —É–¥–∞–ª—è—è —Å—Ç–∞—Ä—ã–µ –ø—Ä–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–º –∑–∞–ø—É—Å–∫–µ.
# ‚û¢ –§–∏–∫—Å—Ç—É—Ä–∞ set_num
# –ò—Å–ø–æ–ª—å–∑—É—è —Ñ–∞–π–ª–æ–≤—ã–π –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä get_file –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ —Ü–∏—Ñ—Ä –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
# —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞. –§–∏–∫—Å—Ç—É—Ä–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.
# ‚û¢ –§–∏–∫—Å—Ç—É—Ä–∞ set_char
# –°–Ω–æ–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä get_file, –Ω–æ –ø–æ–ª—É—á–∞–µ–º —É–∂–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª. –ò–º—è
# —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –Ω–æ –∫–∞—Ç–∞–ª–æ–≥–∏ —Ä–∞–∑–Ω—ã–µ. –ó–∞–ø–æ–ª–Ω—è–µ–º –µ–≥–æ –±—É–∫–≤–∞–º–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –≤
# –Ω–æ–ª—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º get_file - —Ñ–∞–π–ª–æ–≤—ã–π –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä.
# ‚û¢ –ö–µ–π—Å test_first_num
# –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ç–µ—Å—Ç–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ñ–∏–∫—Å—Ç—É—Ä—ã, —Å–æ–∑–¥–∞—é—â–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏
# –∑–∞–ø–æ–ª–Ω—è—é—â–∏–µ –µ–≥–æ —Ü–∏—Ñ—Ä–∞–º–∏. –î–∞–ª–µ–µ –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ get_file —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—è—Ç—å
# –ø–µ—Ä–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö —Å–æ —Å—Ç—Ä–æ–∫–æ–π —Ç–µ–∫—Å—Ç–∞.
# ‚û¢ –ö–µ–π—Å test_first_char
# –ö–µ–π—Å –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ–≥–æ –æ–¥–Ω—É —Ñ–∏–∫—Å—Ç—É—Ä—É set_char. –ù–æ —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
# –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ–∏–∫—Å—Ç—É—Ä—É get_file –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë, –º—ã –º–æ–∂–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Ñ–∞–π–ª–æ–≤–æ–º—É
# –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—É –ø–æ –∏–º–µ–Ω–∏ set_char.
# –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –¥–∞—ë—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –≥–∏–±–∫–æ—Å—Ç–∏ –∫–µ–π—Å–æ–≤ pytest.
# –°—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –º–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –∫—É—Ä—Å–∞, –Ω–æ pytest —è–≤–ª—è–µ—Ç—Å—è –ª—É—á—à–∏–º –∏–∑ —Ç—Ä—ë—Ö
# —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Å–µ —Ç—Ä–∏, —Å–æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ—ë.
#
#
#
# –ó–∞–¥–∞–Ω–∏–µ
# –ü–µ—Ä–µ–¥ –≤–∞–º–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –¥–æ–ª–∂–Ω–∞ –¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∞, —á—Ç–æ–±—ã
# –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã. –£ –≤–∞—Å 3 –º–∏–Ω—É—Ç—ã.
# import pytest
# from main import func
#
#
# def test_1():
#     assert func(4) == 0
# def test_2():
#     assert func(4, -4) == (1, 0)
# def test_3():
#     assert func(4, -10, -50) == (5, -2.5)
# def test_4():
#     assert func(1, 1, 1) is None
#
# if __name__ == '__main__':
#     pytest.main(['-v'])
# –í—ã–≤–æ–¥
# –ù–∞ —ç—Ç–æ–π –ª–µ–∫—Ü–∏–∏ –º—ã:
# 1. –†–∞–∑–æ–±—Ä–∞–ª–∏—Å—å —Å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ—Å—Ç–æ–≤ –≤ Python
# 2. –ò–∑—É—á–∏–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ doctest
# 3. –£–∑–Ω–∞–ª–∏ –æ –ø–∞–∫–µ—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è unittest
# 4. –†–∞–∑–æ–±—Ä–∞–ª–∏—Å—å —Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —á–µ—Ä–µ–∑ pytest
